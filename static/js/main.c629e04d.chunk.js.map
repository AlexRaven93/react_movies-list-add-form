{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Regex/pattern.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","errorUrl","test","errorText","trim","htmlFor","type","classNames","onBlur","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","submitDisabled","handleChange","event","target","prevMovie","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c629e04d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { pattern } from '../Regex/pattern';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  const errorUrl = (name === 'imdbUrl' || name === 'imgUrl')\n  && touched && value && !pattern.test(value);\n  const errorText = (name === 'title' || name === 'description'\n  || name === 'imdbId') && touched && value && !value.trim();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || errorUrl,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n          required={required}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {(errorUrl || errorText) && (\n        <p className=\"help is-danger\">{`${label} must be valid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype NewMovieProps = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const resetForm = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    resetForm();\n    setCount(count + 1);\n  };\n\n  const submitDisabled = (\n    !newMovie.title.trim()\n    || !newMovie.imdbUrl.trim()\n    || !newMovie.imgUrl.trim()\n    || !newMovie.imdbId.trim()\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewMovie((prevMovie) => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={submitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}